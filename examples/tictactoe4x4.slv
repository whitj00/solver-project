## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
#  This is an implementation of a 4x4 TicTacToe Game        ##
#  Solving from an empty board will take a *very* long time ##
#  However, it works and gets much faster very quickly as   ##
#  the game progresses.                                     ##
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##

(defBoard (list
                0 0 0 0
                0 0 0 0
                0 0 0 0
                0 0 0 0
           ))


(defWin Player1 '(or
                    (= 1 (val 0 board) (val 1 board) (val 2 board) (val 3 board))
                    (= 1 (val 4 board) (val 5 board) (val 6 board) (val 7 board))
                    (= 1 (val 8 board) (val 9 board) (val 10 board) (val 11 board))
                    (= 1 (val 12 board) (val 13 board) (val 14 board) (val 15 board))
                    (= 1 (val 0 board) (val 4 board) (val 8 board) (val 12 board))
                    (= 1 (val 1 board) (val 5 board) (val 9 board) (val 13 board))
                    (= 1 (val 2 board) (val 6 board) (val 10 board) (val 14 board))
                    (= 1 (val 3 board) (val 7 board) (val 11 board) (val 15 board))
                    (= 1 (val 0 board) (val 5 board) (val 10 board) (val 15 board))
                    (= 1 (val 3 board) (val 6 board) (val 9 board) (val 12 board))))

(defWin Player2 '(or
                    (= 2 (val 0 board) (val 1 board) (val 2 board) (val 3 board))
                    (= 2 (val 4 board) (val 5 board) (val 6 board) (val 7 board))
                    (= 2 (val 8 board) (val 9 board) (val 10 board) (val 11 board))
                    (= 2 (val 12 board) (val 13 board) (val 14 board) (val 15 board))
                    (= 2 (val 0 board) (val 4 board) (val 8 board) (val 12 board))
                    (= 2 (val 1 board) (val 5 board) (val 9 board) (val 13 board))
                    (= 2 (val 2 board) (val 6 board) (val 10 board) (val 14 board))
                    (= 2 (val 3 board) (val 7 board) (val 11 board) (val 15 board))
                    (= 2 (val 0 board) (val 5 board) (val 10 board) (val 15 board))
                    (= 2 (val 3 board) (val 6 board) (val 9 board) (val 12 board))))

(defWin Neither '(not (validMoves?)))

(defMoves Player1 '(changeList 0 1 board))

(defMoves Player2 '(changeList 0 2 board))

(solve)

